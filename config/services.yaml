# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'en'

  kickin.exceptionhandler.configuration.class: App\ExceptionHandler\ExceptionHandlerConfiguration

  app_version: '%env(APP_VERSION)%'
  production_server: '%env(PRODUCTION_SERVER)%'
  exception_receiver: '%env(EXCEPTION_RECEIVER)%'

  env(HTTP_SCHEMA): 'https'
  router.request_context.host: '%env(HTTP_HOST)%'
  router.request_context.scheme: '%env(HTTP_SCHEMA)%'

  oidc.well_known_url: '%env(OIDC_WELL_KNOWN)%'
  oidc.client_id: '%env(OIDC_CLIENT_ID)%'
  oidc.client_secret: '%env(OIDC_CLIENT_SECRET)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true    # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false     # Allows optimizing the container by removing unused services; this also means
              # fetching services directly from the container via $container->get() won't work.
              # The best practice is to be explicit about your dependencies anyway.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{Entity,Migrations,Tests}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: [ 'controller.service_arguments' ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # Overwrite for JMS serializer to always use the identical names
  jms_serializer.naming_strategy:
    alias: App\Serializer\Metadata\PropertyMetadata\SerializedNameWithIdenticalPropertyNamingStrategy

  App\Database\SoftDeletableSubscriber:
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  App\Form\Extension\FormExtension:
    tags:
      - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType }

  App\Oidc\OidcClient:
    arguments:
      $wellKnownUrl: '%oidc.well_known_url%'
      $clientId: '%oidc.client_id%'
      $clientSecret: '%oidc.client_secret%'

  security.authentication.provider.oidc:
    class: App\Oidc\Security\Authentication\Provider\OidcProvider
    arguments:
      - ''
      - '@security.user_checker'
      - '@security.token_storage'
      - '@logger'

  security.authentication.listener.oidc:
    class: App\Oidc\Security\Firewall\OidcListener
    arguments:
      - '@security.token_storage'
      - '@security.authentication.manager'
      - '@security.authentication.session_strategy'
      - '@security.http_utils'
      - ''
      - ''
      - ''
      - { }
      - '@logger'
      - '@App\Oidc\OidcClient'
