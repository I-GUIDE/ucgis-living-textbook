{% extends 'single_column.html.twig' %}

{% block title %}
  {{ 'permissions.study-area-title'|trans }}
{% endblock %}

{% macro print_users(users, emailUsers, type) %}
  {% import '_macro/_action_buttons.html.twig' as buttons %}
  {% if (users|length + emailUsers|length) > 0 %}
    <div class="table-responsive">
      <table class="table">
        <thead>
        <tr>
          <th scope="col">{{ 'user.display-name'|trans }}</th>
          <th scope="col">{{ 'user.emailaddress'|trans }}</th>
          <th scope="col" class="actions">{{ 'form.revoke'|trans }}</th>
        </tr>
        </thead>
        <tbody>
        {% for user in users %}
          <tr>
            <td>{{ user.displayName }}</td>
            <td>{{ user.username }}</td>
            <td class="actions">
              {{ buttons.remove_button(path('app_permissions_removepermission', {'user': user.id, 'groupType': type}), false, 'form.revoke'|trans) }}
            </td>
          </tr>
        {% endfor %}
        {% for emailUser in emailUsers %}
          <tr>
            <td></td>
            <td>{{ emailUser.email }}</td>
            <td class="actions">
              {{ buttons.remove_button(path('app_permissions_removeemailpermission', {'email': emailUser.email|url_encode, 'groupType': type}), false, 'form.revoke'|trans) }}
            </td>
          </tr>
        {% endfor %}
        </tbody>
      </table>
    </div>
  {% endif %}

  <div role="group" aria-label="{{ 'form.action-bar'|trans }}">
    <a href="{{ path('app_permissions_addpermissions', {'groupType': type}) }}" class="btn btn-outline-success">
      <i class="fa fa-fw fa-plus"></i> {{ 'form.add'|trans }}
    </a>
    {% if (users|length + emailUsers|length) > 0 %}
      <a href="{{ path('app_permissions_removeallpermissions', {'groupType': type}) }}" class="btn btn-outline-danger">
        <i class="fa fa-fw fa-times"></i> {{ 'form.revoke-all'|trans }}
      </a>
    {% endif %}
  </div>
  <div class="mt-4"></div>
{% endmacro %}

{% block content %}
  {% if studyArea.accessType != 'group' and studyArea.accessType != 'public' %}
    {{ 'permissions.study-area-not-group-or-public'|trans({'%item%': studyArea.name}) }}
    <a href="{{ path('app_studyarea_edit', {'studyArea': studyArea.id, 'permissions': true}) }}">
      {{ 'permissions.change-now'|trans }}.
    </a>
  {% else %}

    <p>{{ 'permissions.info-text'|trans }}</p>
    {% from _self import print_users %}

    {% if studyArea.accessType != 'public' %}
      {% set viewers = studyArea.viewers %}
      {% set emailViewers = studyArea.emailViewers %}

      <h4>{{ 'permissions.viewer-count'|trans({'%count%': viewers|length + emailViewers|length}) }}</h4>
      {{ print_users(viewers, emailViewers, constant('App\\Entity\\UserGroup::GROUP_VIEWER')) }}
    {% endif %}

    {% set editors = studyArea.editors %}
    {% set emailEditors = studyArea.emailEditors %}
    <h4>{{ 'permissions.editor-count'|trans({'%count%': editors|length + emailEditors|length}) }}</h4>
    {{ print_users(editors, emailEditors, constant('App\\Entity\\UserGroup::GROUP_EDITOR')) }}

    {% set reviewers = studyArea.reviewers %}
    {% set emailReviewers = studyArea.emailReviewers %}
    <h4>{{ 'permissions.reviewer-count'|trans({'%count%': reviewers|length + emailReviewers|length}) }}</h4>
    {{ print_users(reviewers, emailReviewers, constant('App\\Entity\\UserGroup::GROUP_REVIEWER')) }}

  {% endif %}
{% endblock %}
