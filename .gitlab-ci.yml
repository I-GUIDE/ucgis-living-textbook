stages:
  - prepare
  - lint
  - build
  - tests
  - sentry
  - deploy

include:
  # Prepare
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/symfony/install-dependencies.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/yarn/install-js-dependencies.yml'

  # Lint
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/php/cve-check.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/php/composer-unused.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/shell/shellcheck.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/php/phan.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/ts/tslint.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/yaml/yamllint.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/yarn/audit.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/sass/sasslint.yml'

  # Build
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/yarn/build-prod.yml'

  # Tests
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/php/phpunit.yml'
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/symfony/check-security.yml'

  # Sentry
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/sentry/sentry.yml'

  # Deploy
  - project: 'intern/runner-templates'
    ref: "3.2"
    file: '/deploy/deploy.yml'

install-dependencies:
  artifacts:
    paths:
      # Default paths from this stage. If you need more, make sure to copy these in your build step
      - assets/js/_fos_routes.json
      - vendor/friendsofsymfony/jsrouting-bundle/Resources/public/js
      - vendor/drenso/symfony-shared/src/Resources/translations
      - .secrets.json
      # Extra paths
      - assets/js/_fos_js_routes.js

js-analysis:
  stage: lint
  image:
    name: hyzual/jshint:latest
    entrypoint: [ "" ]
  needs: [ ]
  before_script:
    - cp tests/jshint/.jshintignore .
  script:
    - /usr/bin/jshint src --verbose --config tests/jshint/config
  tags:
    - docker
  except:
    - master
    - production

action-security-check:
  script:
    - php bin/console ltb:check:action-security

deploy-production:
  before_script:
    - mkdir -p ~/.ssh
    - echo "${JUMP_HOST} ${JUMP_HOST_SSH_FINGERPRINT}" >> ~/.ssh/known_hosts
    - echo "${PRODUCTION_HOST_SSH} ${PRODUCTION_HOST_SSH_FINGERPRINT}" >> ~/.ssh/known_hosts
    - echo "[${PRODUCTION_HOST_SSH}]:${PRODUCTION_HOST_SSH_PORT} ${PRODUCTION_HOST_SSH_FINGERPRINT}" >> ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - ssh-add <(echo "${PRODUCTION_HOST_SSH_PRIVATE_KEY}")
    - ssh-add <(echo "${JUMP_HOST_SSH_PRIVATE_KEY}")
  script:
    - ssh -tt -J ${JUMP_USER}@${JUMP_HOST} ${PRODUCTION_USER}@${PRODUCTION_HOST_SSH} -p ${PRODUCTION_HOST_SSH_PORT} ${CI_PIPELINE_ID}
