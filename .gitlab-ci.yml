stages:
  - prepare
  - build
  - static
  - tests
  - deploy

install-dependencies:
  stage: prepare
  image: drenso/php:7.1-d1
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}_cache"
    expire_in: 1 hour
    paths:
      - assets/js/_fos_js_routes.js
      - var/cache/
      - vendor/
  before_script:
    - ./install-composer.sh
  script:
    - php composer.phar install --no-interaction --no-progress --no-suggest
  after_script:
    - find vendor/ -name .git -type d -exec rm -rf {} \+
  tags:
    - docker
  except:
    - drenso-updates-v2

build-assets:
  stage: build
  image: node:9.11
  dependencies:
    - install-dependencies
  artifacts:
      name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}_assets"
      expire_in: 1 hour
      paths:
        - public/build
  before_script:
    - yarn install
  script:
    - yarn run encore production
  tags:
    - docker
  except:
    - drenso-updates-v2

php-analysis:
  stage: static
  image:
    name: kickin/phan:0.12.2
    entrypoint: [ "" ]
  dependencies:
    - install-dependencies
  script:
    - php7 /opt/phan/phan -k tests/phan/config.php
  tags:
    - docker
  except:
    - drenso-updates-v2
    - production

js-analysis:
  stage: static
  image:
    name: hyzual/jshint:latest
    entrypoint: [ "" ]
  dependencies: []
  before_script:
    - cp tests/jshint/.jshintignore .
  script:
    - /usr/bin/jshint src --verbose --config tests/jshint/config
  tags:
    - docker
  except:
    - drenso-updates-v2
    - production

yaml-analysis:
  stage: static
  image: kickin/yamllint:1.0.0
  dependencies: []
  # This needs to be removed once https://github.com/adrienverge/yamllint/issues/30 is fixed
  before_script:
    - "find src -type f -name *.yml -exec sed -ri 's/(_controller: )([a-zA-Z]+:[a-zA-Z\\/]+:[a-zA-Z]+)/\\1\\\"\\2\\\"/g' {} \\;"
    - "find config -type f -name *.yml -exec sed -ri 's/(_controller: )([a-zA-Z]+:[a-zA-Z\\/]+:[a-zA-Z]+)/\\1\\\"\\2\\\"/g' {} \\;"
  script:
    - yamllint -c tests/yamllint/config config
  tags:
    - docker
  except:
    - drenso-updates-v2
    - production

sass-analysis:
  stage: static
  image: drenso/sasslint:1.12.1-d1
  dependencies: []
  before_script:
    - cp tests/sass-lint/.sass-lint.yml .
  script:
    - sass-lint assets/css
  tags:
    - docker
  except:
    - drenso-updates-v2
    - production

deploy-prod:
  stage: deploy
  image: kickin/ssh:1.0.0
  dependencies:
    - build-assets
  before_script:
    - mkdir ~/.ssh/
    - echo "linux367.utsp.utwente.nl $SSH_PROD_HOST_KEY" > ~/.ssh/known_hosts
    - echo "$SSH_PROD_PRIVATE_KEY" > /prod_id
    - chmod 600 /prod_id
  script:
    - scp -i /prod_id -r public/build x1002348@linux367.utsp.utwente.nl:~/build
    - ssh -i /prod_id -tt x1002348@linux367.utsp.utwente.nl './013-living-textbook --no-forward "cd /opt/application/013-living-textbook && ./update/start_update"'
    - ssh -i /prod_id -tt x1002348@linux367.utsp.utwente.nl './013-living-textbook --scp "build" "/opt/application/013-living-textbook/public"'
    - ssh -i /prod_id -tt x1002348@linux367.utsp.utwente.nl './013-living-textbook --no-forward "cd /opt/application/013-living-textbook && ./update/finish_update"'
    - ssh -i /prod_id -tt x1002348@linux367.utsp.utwente.nl 'rm -rf build'
    - rm /prod_id
  tags:
    - docker
  only:
    - production
